---
import IndexMenu from "../components/ui/Index/Index.astro";
const { frontmatter, headings, file } = Astro.props;

// const testProps = {
//   ...Astro.props,
// };
// console.log("testProps", testProps);

// Function to generate breadcrumbs
function generateBreadcrumbs(url) {
  const parts = url.split("/").filter(Boolean);
  let path = "";
  return [
    { name: "Inicio", url: parts.length === 0 ? null : "/" },
    ...parts.map((part, index) => {
      path += `/${part}`;
      return {
        name: part.charAt(0).toUpperCase() + part.slice(1).replace(/-/g, " "),
        url: index === parts.length - 1 ? null : path,
      };
    }),
  ];
}
const breadcrumbs = generateBreadcrumbs(Astro.url.pathname);

function renderMenuItems(items) {
  return `
    <ul class="menu-list">
      ${items
        .map(
          (item) => `
        <li class="menu-item">
          <div class="menu-item-header">
            <a href="${item.url}">${item.label}</a>
            ${
              item.children && item.children.length > 0
                ? `<button class="toggle-btn" aria-label="Toggle submenu">
                   <i class="i-mdi-chevron-down"></i>
                 </button>`
                : ""
            }
          </div>
          ${
            item.children && item.children.length > 0
              ? `<div class="submenu">${renderMenuItems(item.children)}</div>`
              : ""
          }
        </li>
      `
        )
        .join("")}
    </ul>
  `;
}
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{frontmatter.title} - Guía de Programación</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        line-height: 1.6;
        color: #333;
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
      }
      nav {
        background-color: #f4f4f4;
        padding: 10px;
      }
      nav a {
        margin-right: 15px;
        color: #333;
        text-decoration: none;
      }
      h1 {
        color: #0066cc;
      }
      .breadcrumbs {
        margin-bottom: 20px;
        font-size: 0.9em;
      }
      .breadcrumbs a {
        color: #0066cc;
        text-decoration: none;
      }
      .breadcrumbs span:last-child {
        color: #666;
      }
    </style>
  </head>
</html>
<body>
  <nav>
    <a href="/">Inicio</a>
  </nav>
  <div class="breadcrumbs">
    {
      breadcrumbs.map((crumb, index) => (
        <span>
          {index > 0 && " > "}
          {crumb.url ? (
            <a href={crumb.url}>{crumb.name}</a>
          ) : (
            <span>{crumb.name}</span>
          )}
        </span>
      ))
    }
  </div>
  <IndexMenu />
  <main>
    <h1>{frontmatter.title}</h1>
    <slot />
  </main>

  <script>
    function toggleSubmenu(btn) {
      const submenu = btn.closest(".menu-item").querySelector(".submenu");
      const icon = btn.querySelector("i");
      if (submenu.style.display === "block") {
        submenu.style.display = "none";
        icon.className = "i-mdi-chevron-down";
      } else {
        submenu.style.display = "block";
        icon.className = "i-mdi-chevron-up";
      }
    }

    function expandAll(expand = true) {
      document.querySelectorAll(".submenu").forEach((submenu) => {
        submenu.style.display = expand ? "block" : "none";
      });
      document.querySelectorAll(".toggle-btn i").forEach((icon) => {
        icon.className = expand ? "i-mdi-chevron-up" : "i-mdi-chevron-down";
      });
    }

    document.addEventListener("DOMContentLoaded", () => {
      document.querySelectorAll(".toggle-btn").forEach((btn) => {
        btn.addEventListener("click", () => toggleSubmenu(btn));
      });

      const expandAllBtn = document.getElementById("expandAllBtn");
      let isExpanded = false;
      expandAllBtn.addEventListener("click", () => {
        isExpanded = !isExpanded;
        expandAll(isExpanded);
        expandAllBtn.textContent = isExpanded
          ? "Contraer todo"
          : "Desplegar todo";
      });
    });
  </script>
</body>
