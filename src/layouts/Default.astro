---
import { ViewTransitions } from "astro:transitions";
const { frontmatter, headings, file } = Astro.props;
---
<!DOCTYPE html>
<html lang="es" class="light">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{frontmatter.title} - GuÃ­a de ProgramaciÃ³n</title>
    <style>
      :root {
        --bg-main: #FFFFFF;
        --text-main: #333333;
        --accent-primary: #007ACC;
        --accent-secondary: #4A90E2;
        --accent-tertiary: #E6F3FF;
      }

      .dark {
        --bg-main: #1E1E1E;
        --text-main: #E0E0E0;
        --accent-primary: #4A90E2;
        --accent-secondary: #64B5F6;
        --accent-tertiary: #2C3E50;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      html,
      body {
        height: 100%;
        margin: 0;
        font-family: "Source Sans Pro", sans-serif;
        background-color: var(--bg-main);
        color: var(--text-main);
        line-height: 1.6;
        transition: background-color 0.3s ease, color 0.3s ease;
      }

      .wrapper {
        min-height: 100%;
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: auto 1fr auto;
        grid-template-areas:
          "header"
          "content"
          "footer";
        transition: all 0.3s ease;
      }

      header {
        grid-area: header;
        background-color: var(--accent-primary);
        color: var(--bg-main);
        padding: 1rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        z-index: 10;
      }

      .toggle-btn {
        background-color: var(--accent-secondary);
        color: var(--bg-main);
        border: none;
        padding: 0.5rem 1rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }

      .toggle-btn:hover {
        background-color: var(--accent-tertiary);
        color: var(--text-main);
      }

      #headerToggle {
        margin-right: 1rem;
      }

      article {
        grid-area: content;
        padding: 1rem;
        display: flex;
        flex-direction: column;
      }

      aside {
        grid-area: sidebar;
        background-color: var(--accent-tertiary);
        color: var(--text-main);
        overflow: hidden;
        width: 0;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
        transition: all 0.3s ease;
        z-index: 20;
        display: flex;
        flex-direction: column;
      }

      .wrapper.sidebar-visible aside {
        width: 250px;
        padding: 1rem;
      }

      #sidebarToggle {
        align-self: flex-start;
        margin-bottom: 1rem;
      }

      footer {
        grid-area: footer;
        background-color: var(--accent-primary);
        color: var(--bg-main);
        padding: 1rem;
        text-align: center;
      }

      .wrapper {
        gap: 0;
      }

      .wrapper:not(.sidebar-visible) #sidebarToggle {
        display: none;
      }

      .wrapper.sidebar-visible #headerToggle {
        display: none;
      }

      /* Typography styles */
      h1, h2, h3, h4, h5, h6 {
        color: var(--accent-primary);
        margin-bottom: 1rem;
      }

      a {
        color: var(--accent-secondary);
        text-decoration: none;
      }

      a:hover {
        text-decoration: underline;
        color: var(--accent-primary);
      }

      /* Theme toggle switch */
      .theme-switch {
        display: flex;
        align-items: center;
      }

      .theme-switch input {
        display: none;
      }

      .theme-switch label {
        cursor: pointer;
        padding: 0.5rem;
        background-color: var(--accent-secondary);
        border-radius: 1rem;
        display: flex;
        align-items: center;
      }

      .theme-switch label::after {
        content: 'ðŸŒž';
        margin-left: 0.5rem;
      }

      .theme-switch input:checked + label::after {
        content: 'ðŸŒ™';
      }

      /* Breakpoints */
      /* xs: < 500px (default styles above) */
      
      /* sm: 500px > < 767px */
      @media (min-width: 500px) {
        /* Styles remain the same as xs */
      }

      /* md: 767px > < 1280px */
      @media (min-width: 767px) {
        .wrapper {
          grid-template-columns: 0fr 1fr;
          grid-template-areas:
            "sidebar header"
            "sidebar content"
            "footer footer";
        }
        .wrapper.sidebar-visible {
          grid-template-columns: 250px 1fr;
        }
        aside {
          position: relative;
          height: auto;
        }
        header {
          grid-column: 2 / -1;
        }
        .wrapper:not(.sidebar-visible) header {
          grid-column: 1 / -1;
        }
      }

      /* lg: 1280px > < 1920px */
      @media (min-width: 1280px) {
        /* Styles remain the same as md */
      }

      /* xl: 1920px > < 2560px */
      @media (min-width: 1920px) {
        .wrapper.sidebar-visible {
          grid-template-columns: 300px 1fr;
        }
        .wrapper.sidebar-visible aside {
          width: 300px;
        }
      }

      /* xxl: > 2560px */
      @media (min-width: 2560px) {
        .wrapper.sidebar-visible {
          grid-template-columns: 350px 1fr;
        }
        .wrapper.sidebar-visible aside {
          width: 350px;
        }
      }
    </style>
  </head>
  <body>
    <div class="wrapper">
      <header>
        <button id="headerToggle" class="toggle-btn">â˜°</button>
        <span>GuÃ­a de ProgramaciÃ³n</span>
        <div class="theme-switch">
          <input type="checkbox" id="theme-toggle">
          <label for="theme-toggle"></label>
        </div>
      </header>
      <article>
        <h1>{frontmatter.title}</h1>
        <div style="flex-grow: 1;">
          <slot />
        </div>
      </article>
      <aside>
        <button id="sidebarToggle" class="toggle-btn">X</button>
        <nav>
          <ul>
            <li><a href="#">IntroducciÃ³n</a></li>
            <li><a href="#">JavaScript</a></li>
            <li><a href="#">Python</a></li>
          </ul>
        </nav>
      </aside>
      <footer>Â© 2024 GuÃ­a de ProgramaciÃ³n</footer>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", (event) => {
        const headerToggle = document.getElementById("headerToggle");
        const sidebarToggle = document.getElementById("sidebarToggle");
        const wrapper = document.querySelector(".wrapper");
        const themeToggle = document.getElementById("theme-toggle");
        const htmlElement = document.documentElement;

        function toggleSidebar() {
          wrapper.classList.toggle("sidebar-visible");
        }

        function toggleTheme() {
          htmlElement.classList.toggle("dark");
        }

        headerToggle.addEventListener("click", toggleSidebar);
        sidebarToggle.addEventListener("click", toggleSidebar);
        themeToggle.addEventListener("change", toggleTheme);

        // Check user's preferred color scheme
        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
          htmlElement.classList.add("dark");
          themeToggle.checked = true;
        }
      });
    </script>
  </body>
</html>